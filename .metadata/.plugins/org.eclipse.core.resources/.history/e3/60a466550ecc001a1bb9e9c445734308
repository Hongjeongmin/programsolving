import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.StringTokenizer;

public class B3665 {
	static int Tc;
	static int N, M;
	static int seq[];
	static ArrayList<Integer> Vex[];

	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		StringBuilder sb;
		Tc = Integer.parseInt(br.readLine());

		while (Tc-- != 0) {
			N = Integer.parseInt(br.readLine());
			seq = new int[N];
			st = new StringTokenizer(br.readLine());
			for (int n = 0; n < N; n++)
				seq[n] = Integer.parseInt(st.nextToken());

			Vex = new ArrayList[N + 1];
			for (int n = 1; n <= N; n++)
				Vex[n] = new ArrayList<>();

			for (int i = 0; i < N - 1; i++) {
				for (int j = i + 1; j < N; j++) {
					Vex[j].add(i);
				}
			}

			M = Integer.parseInt(br.readLine());
			for (int m = 0; m < M; m++) {
				st = new StringTokenizer(br.readLine());
				// a <- b
				int a = Integer.parseInt(st.nextToken());
				int b = Integer.parseInt(st.nextToken());

				// b <- a 엿던것을 a < - b로 바꾼다.

				// b <- a edge 제거
				for (Iterator<Integer> it = Vex[a].iterator(); it.hasNext();) {
					int cur = it.next();
					if (cur == b) {
						it.remove();
						break;
					}
				}

				// a<-b 엣지 추가
				Vex[b].add(a);
			}
		}
	}
}
